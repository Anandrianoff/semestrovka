/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-11-12 13:27:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class profile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Личный кабинет</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form action=\"profile\" method=post id=\"myForm\" class=\"form-signin\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"radio\">\r\n");
      out.write("    <label>\r\n");
      out.write("        <input type=\"radio\" name=\"status\" id=\"statusM\" value=\"musician\" checked>\r\n");
      out.write("        Я &mdash; музыкант\r\n");
      out.write("    </label>\r\n");
      out.write("    <label >\r\n");
      out.write("        <input type=\"radio\" name=\"status\" id=\"statusR\" value=\"reader\">\r\n");
      out.write("        Я &mdash; простой смертный\r\n");
      out.write("    </label>\r\n");
      out.write("</div>\r\n");
      out.write("<input type=\"password\" name=\"oldpassword\" id=\"oldpassword\" size=\"25\" class=\"form-control\" placeholder=\"old password\"><br>\r\n");
      out.write("<input type=\"password\" name=\"password\" id=\"password\" size=\"25\" class=\"form-control\" placeholder=\"password\"><br>\r\n");
      out.write("<input type=\"submit\" value=\"Готово\" class=\"btn btn-lg btn-primary btn-block\">\r\n");
      out.write("</form>\r\n");
      out.write("<script src=\"webjars/jquery-validation/1.14.0/jquery.validate.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("    $.validator.setDefaults({\r\n");
      out.write("        highlight: function (element) {\r\n");
      out.write("            $(element).closest('.form-group').addClass('has-error');\r\n");
      out.write("        },\r\n");
      out.write("        unhighlight: function (element) {\r\n");
      out.write("            $(element).closest('.form-group').removeClass('has-error');\r\n");
      out.write("        },\r\n");
      out.write("        errorElement: 'span',\r\n");
      out.write("        errorClass: 'help-block',\r\n");
      out.write("        errorPlacement: function (error, element) {\r\n");
      out.write("            if (element.parent('.input-group').length) {\r\n");
      out.write("                error.insertAfter(element.parent());\r\n");
      out.write("            } else {\r\n");
      out.write("                error.insertAfter(element);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    $(function () {\r\n");
      out.write("        $(\"#myForm\").validate({\r\n");
      out.write("            onkeyup: true,\r\n");
      out.write("            // Specify the validation rules\r\n");
      out.write("            rules: {\r\n");
      out.write("                oldpassword: {\r\n");
      out.write("                    required: true,\r\n");
      out.write("                    remote: {\r\n");
      out.write("                        url: \"checkpassword\",\r\n");
      out.write("                        type: \"post\"\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                password: {\r\n");
      out.write("                    required: true,\r\n");
      out.write("                    minlength: 5\r\n");
      out.write("                },\r\n");
      out.write("                agree: \"required\"\r\n");
      out.write("            },\r\n");
      out.write("\r\n");
      out.write("            // Specify the validation error messages\r\n");
      out.write("            messages: {\r\n");
      out.write("                oldpassword: {\r\n");
      out.write("                    required: \"Это обязательное поле\",\r\n");
      out.write("                    remote: \"Неверный пароль\"\r\n");
      out.write("                },\r\n");
      out.write("                password: {\r\n");
      out.write("                    required: \"Обязательное поле\",\r\n");
      out.write("                    minlength: \"Минимальная длина 5\"\r\n");
      out.write("                },\r\n");
      out.write("                agree: \"Согласитеесь\"\r\n");
      out.write("            },\r\n");
      out.write("\r\n");
      out.write("            submitHandler: function (form) {\r\n");
      out.write("\r\n");
      out.write("                form.submit();\r\n");
      out.write("\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        $(\"#myForm\").change(function () {\r\n");
      out.write("            $(\"#oldpassword\").removeData(\"previousValue\"); //clear cache when changing group\r\n");
      out.write("            $(\"#myForm\").data('validator').element(\"#oldpassword\"); //retrigger remote call\r\n");
      out.write("            //my validator is stored in .data() on the form\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
